name: 伺服器測試

on:
  push:
  pull_request:
    branches: [main]

env:
  DB_USERNAME: testHexschool
  DB_PASSWORD: pgStartkit4test
  DB_DATABASE: test
  PORT: 3000

jobs:
  build :
    name: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout to Repo Directory
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.DEPLOY_GITHUB_TOKEN }}
    - name: Use Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    - name: Restore cache node modules
      id: cache
      uses: actions/cache/restore@v4
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: update cache node modules
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
  testServer:
    runs-on: ubuntu-latest
    needs: [build]
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5      
    steps:
      - uses: actions/checkout@v4
      - name: 設定 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
      - name: Restore cache node modules
        id: cache
        uses: actions/cache/restore@v4
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Make env file
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_NODE_ENV: production
          envkey_DB_HOST: ${{ env.DB_HOST }}
          envkey_DB_PORT: ${{ env.DB_PORT }}
          envkey_DB_NAME: ${{ env.DB_DATABASE }}
          envkey_DB_USER: ${{ env.DB_USERNAME }}
          envkey_DB_PASSWORD: ${{ env.DB_PASSWORD }}
          envkey_DB_SYNCHRONIZE: true
          envkey_DB_ENABLE_SSL: false
          envkey_PORT: 3000
          directory: ./
          file_name: .env
      - name: 啟動 API 伺服器
        run: node ./bin/www.js &
      - name: 測試伺服器是否正常開啟
        run: curl -i http://localhost:${{ env.PORT }}/healthcheck || exit 1